@model GovFinance.Models.ViewModels.AdminUserLedgerVm
@{
    ViewData["Title"] = "كشف حساب المواطن";
}

<h2>@ViewData["Title"]</h2>

<div class="card mb-3">
    <div class="card-body">
        <div><strong>الاسم:</strong> @Model.FullName</div>
        <div><strong>الرقم الوطني:</strong> @Model.Id</div>
        <div><strong>الإيميل:</strong> @Model.Email</div>
    </div>
</div>

<form method="get" class="row g-2 mb-3">
    <input type="hidden" name="id" value="@Model.Id" />
    <div class="col-auto">
        <label class="form-label">من تاريخ</label>
        <input type="date" class="form-control" name="start" value="@Model.Start" />
    </div>
    <div class="col-auto">
        <label class="form-label">إلى تاريخ</label>
        <input type="date" class="form-control" name="end" value="@Model.End" />
    </div>
    <div class="col-auto align-self-end">
        <button class="btn btn-primary">تصفية</button>
        <a class="btn btn-outline-secondary" href="@Url.Action("Ledger", new { id = Model.Id })">إعادة ضبط</a>
        <a class="btn btn-success" href="@Url.Action("ExportLedgerCsv", new { id = Model.Id, start = Model.Start, end = Model.End, type = "all" })">تصدير CSV (الكل)</a>
        <a class="btn btn-outline-success" href="@Url.Action("ExportLedgerCsv", new { id = Model.Id, start = Model.Start, end = Model.End, type = "incomes" })">CSV دخل</a>
        <a class="btn btn-outline-success" href="@Url.Action("ExportLedgerCsv", new { id = Model.Id, start = Model.Start, end = Model.End, type = "expenses" })">CSV مصروف</a>
    </div>
</form>

<div class="row g-2 mb-3">
    <div class="col-sm-4">
        <div class="card">
            <div class="card-body">
                <div class="h6">إجمالي الدخل</div>
                <div class="fs-5">@Model.TotalIncome.ToString("0.00")</div>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="card">
            <div class="card-body">
                <div class="h6">إجمالي المصروف</div>
                <div class="fs-5">@Model.TotalExpense.ToString("0.00")</div>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <div class="card">
            <div class="card-body">
                <div class="h6">الصافي (دخل - مصروف)</div>
                <div class="fs-5">@Model.Net.ToString("0.00")</div>
            </div>
        </div>
    </div>
</div>

<div class="table-responsive">
    <h4>الدخل</h4>
    <table id="expensesTable" class="table table-hover align-middle">
        <thead>
            <tr>
                <th>ID</th>
                <th>المصدر</th>
                <th class="text-end">المبلغ</th>
                <th class="text-end">المدفوع</th>
                <th class="text-end">المتبقّي</th>
                <th style="width:130px">التاريخ</th>
                <th>ملاحظات</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Incomes)
            {
                var outstanding = item.Amount - item.CollectedAmount;
                <tr>
                    <!-- ID -->
                    <td class="text-muted small latin-digits" data-order="@item.Id">@item.Id</td>

                    <td>@item.Source</td>

                    <td class="text-end" data-order="@item.Amount">@item.Amount.ToString("N2")</td>
                    <td class="text-end" data-order="@item.CollectedAmount">@item.CollectedAmount.ToString("N2")</td>

                    <td class="text-end" data-order="@(outstanding)">
                        @if (outstanding > 0)
                        {
                            <span class="badge bg-warning text-dark">@outstanding.ToString("N2")</span>
                        }
                        else
                        {
                            <span class="text-muted">0.00</span>
                        }
                    </td>

                    <td data-order="@item.Date.ToString("yyyyMMdd")">
                        @item.Date.ToString("yyyy-MM-dd")
                    </td>

                    <td class="text-truncate" style="max-width:260px;">
                        @item.Notes
                    </td>


                </tr>
            }
        </tbody>
    </table>
</div>


<div class="table-responsive">
    <h4>المصروف</h4>
    <table id="incomeTable" class="table table-hover align-middle">
        <thead>
            <tr>
                <th>ID</th>
                <th>المصدر</th>
                <th class="text-end">المبلغ</th>
                <th class="text-end">المدفوع</th>
                <th class="text-end">المتبقّي</th>
                <th style="width:130px">التاريخ</th>
                <th>ملاحظات</th>
               
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Expenses)
            {
                var outstanding = item.Amount - item.PaidAmount;
                <tr>
                    <!-- ID -->
                    <td class="text-muted small latin-digits" data-order="@item.Id">@item.Id</td>

                    <td>@item.Source</td>

                    <td class="text-end" data-order="@item.Amount">@item.Amount.ToString("N2")</td>
                    <td class="text-end" data-order="@item.PaidAmount">@item.PaidAmount.ToString("N2")</td>

                    <td class="text-end" data-order="@(outstanding)">
                        @if (outstanding > 0)
                        {
                            <span class="badge bg-warning text-dark">@outstanding.ToString("N2")</span>
                        }
                        else
                        {
                            <span class="text-muted">0.00</span>
                        }
                    </td>

                    <td data-order="@item.Date.ToString("yyyyMMdd")">
                        @item.Date.ToString("yyyy-MM-dd")
                    </td>

                    <td class="text-truncate" style="max-width:260px;">
                        @item.Notes
                    </td>


                </tr>
            }
        </tbody>
    </table>
</div>
@section Scripts {
    <script>
        (function () {
            const params = new URLSearchParams(location.search);
            const len = parseInt(params.get('len') || '10', 10);
            const pageLen = (isFinite(len) && len > 0) ? len : 10;

            new DataTable('#expensesTable', {
                responsive: true,
                deferRender: true,
                pageLength: pageLen,
                lengthMenu: [[10, 20, 50, 100, -1], [10, 20, 50, 100, 'الكل']],
                order: [[5, 'desc']],
                language: {
                    search: 'بحث:',
                    lengthMenu: 'عرض _MENU_',
                    info: 'إظهار _START_–_END_ من _TOTAL_',
                    infoEmpty: 'لا توجد سجلات',
                    zeroRecords: 'لا نتائج',
                    paginate: { first: 'الأول', last: 'الأخير', next: 'التالي', previous: 'السابق' }
                }
            });
             new DataTable('#incomeTable', {
                responsive: true,
                deferRender: true,
                pageLength: pageLen,
                lengthMenu: [[10, 20, 50, 100, -1], [10, 20, 50, 100, 'الكل']],
                order: [[5, 'desc']],
                language: {
                    search: 'بحث:',
                    lengthMenu: 'عرض _MENU_',
                    info: 'إظهار _START_–_END_ من _TOTAL_',
                    infoEmpty: 'لا توجد سجلات',
                    zeroRecords: 'لا نتائج',
                    paginate: { first: 'الأول', last: 'الأخير', next: 'التالي', previous: 'السابق' }
                }
            });
        })();
    </script>
}
